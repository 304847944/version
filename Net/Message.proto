import "data.proto";
import "const.proto";
import "excelconst.proto";
package Proto;


//---Nofity
//元素进入场景
message Notify_ElementJoinState
{
	required int64 Index;
}

//元素退出场景
message Notify_ElementExitState
{
	required int64 Index;
}

//创建一个释放者
message Notify_CreateReleaser
{
    required int64 Index;
	required int64 ReleaserIndex;
	required int64 TargetIndex;
	required string MagicKey;
	
}

//战斗中的角色
message Notify_CreateBattleCharacter
{
	required int64 Index;
	required int64 UserID;//用户ID
	required int32 ConfigID; //配表ID
	required int32 TeamIndex; //阵营ID
	required Vector3 Position;//位置
	required Vector3 Forward;//朝向
	required int32 Level; //等级
	required int32 HP;
	required int32 MP;
	repeated HeroProperty Property;
	required DamageType TDamage; //伤害类型
	required DefanceType TDefance; //防御类型
	required HeroCategory Category;//英雄类型
	required string Name; //名字
	required float Speed;//移动速度
}

//创建一个飞行物
message Notify_CreateMissile
{
	required int64 Index;
	required int64 ReleaserIndex;
	required string ResourcesPath;
	required float Speed;//速度
	required Vector3 Position;
	required string formBone;
	required string toBone;
	required Vector3 offset;
}

message Notify_CharacterBeginMove
{
    required int64 Index;
	required Vector3 StartPosition;
	required Vector3 StartForward;
	required Vector3 TargetPosition;
	required float Speed;
}

message Notify_CharacterStopMove
{
	required int64 Index;
	required Vector3 TargetForward;
	required Vector3 TargetPosition;
	required float Speed;
}

message Notify_LayoutPlayMotion
{
	required int64 Index;
	required string Motion;
}

message Notify_LookAtCharacter
{
	required int64 Own;//源
	required int64 Target;//目标
}

message Notify_LayoutPlayParticle
{
	required int64 ReleaseIndex;
	required int32 FromTarget;
	required int32 ToTarget;
	required string FromBoneName;
	required string ToBoneName;
	required bool Bind;
	required int32 DestoryType;
	required float DestoryTime;
	required string Path;
}

//属性修改
message Notify_PropertyValue
{
	required int64 Index;
	required int32 FinallyValue;
}

//广播伤害
message Notity_EffectSubHP
{
	required int64 Index; 
	required int32 TargetHP; //最终HP 
	required int32 LostHP;//损失HP
	required int32 Max;
}

//广播加血
message Notity_EffectAddHP
{
	required int64 Index;
	required int32 TargetHP;
	required int32 Max;
	required int32 CureHP;
}

message Notify_EffectSubMP
{
	required int64 Index; 
	required int32 TargetMP; //最终MP 
	required int32 LostMP;//损失MP
	required int32 Max;
}

//广播获得魔法
message Notity_EffectAddMP
{
	required int64 Index;
	required int32 TargetMP;
	required int32 Max;
	required int32 CureMP;
}

message Notify_DamageResult
{
	required int64 Index;
	required int64 TargetIndex;
	required bool IsMissed;
	required int32 Damage;
}

//登陆
message C2S_Login
{
    required int32 Version;
	required string UserName; //登陆token
	required string Password; 
}

//登陆返回
message S2C_Login
{
	required ErrorCode Code;
    required int64 UserID;
	required string Session; //session
	required GameServerInfo Server;//所属服务器

}
//注册用户
message C2S_Reg
{
    required int32 Version;
	required string UserName;
	required string Password;
}
//注册返回
message S2C_Reg
{
    required ErrorCode Code;
	required string Session;
	required int64 UserID;
	required GameServerInfo Server;
}

message C2G_Login
{
	required int32 Version;
	required string Session;
	required int64 UserID;
}

message G2C_Login
{
	required ErrorCode Code;
	repeated DHero Heros; //当前角色
	required PlayerPackage Package;//背包
}

//创建角色
message C2G_CreateHero
{
	required int32 HeroID;//选择的英雄ID
}
//创建角色
message G2C_CreateHero
{
	required ErrorCode Code;
}

//开始启动游戏
message C2G_BeginGame
{
	required int32 MapID;
}

message G2C_BeginGame
{
	required ErrorCode Code;
	required GameServerInfo ServerInfo;
}

//退出
message C2B_ExitGame
{
	required int64 UserID;
}

message B2C_ExitGame
{
	required ErrorCode Code;
}

message Task_G2C_JoinBattle
{
	required GameServerInfo Server;
}

message C2B_JoinBattle
{
	required int32 MapID;
	required string Session;
	required int64 UserID;
	required int32 Version;
}

message B2C_JoinBattle
{
	required ErrorCode Code;
}

message Task_B2C_ExitBattle
{
	
}

message C2B_ExitBattle
{
	required int64 UserID;
}

message B2C_ExitBattle
{
	required ErrorCode Code;
}

//获取最后一个战斗服务器
message C2G_GetLastBattle
{
	required int64 UserID;//用户ID
}

message G2C_GetLastBattle
{
	required ErrorCode Code;
	required GameServerInfo BattleServer;//当前战斗服务器
}

//点击移动
message Action_ClickMapGround
{
	required Vector3 TargetPosition; //点击的位置
}

//点击释放技能
message Action_ClickSkillIndex
{
	required int32 Index;//技能对应位置
}
